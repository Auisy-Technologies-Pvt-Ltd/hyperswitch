[package]
name = "hyperswitch_routing"
version = "0.1.0"
edition.workspace = true
rust-version.workspace = true
license.workspace = true
readme = "README.md"
description = "Core routing logic for Hyperswitch"

[features]
default = ["v1", "payouts", "dynamic_routing"]
v1 = ["hyperswitch_domain_models/v1", "storage_impl/v1", "common_utils/v1", "kgraph_utils/v1","hyperswitch_interfaces/v1"]
v2 = ["kgraph_utils/v2","hyperswitch_interfaces/v2"]
dynamic_routing = ["external_services/dynamic_routing", "storage_impl/dynamic_routing", "api_models/dynamic_routing"]
payouts = ["api_models/payouts", "common_enums/payouts", "hyperswitch_domain_models/payouts", "storage_impl/payouts"]

[dependencies]
# Workspace crates
api_models = { path = "../api_models" }
connector_configs = { path = "../connector_configs" }
common_enums = { version = "0.1.0", path = "../common_enums" }
common_utils = { path = "../common_utils" }
hyperswitch_interfaces = { version = "0.1.0", path = "../hyperswitch_interfaces", default-features = false }
hyperswitch_constraint_graph = { version = "0.1.0", path = "../hyperswitch_constraint_graph" }
hyperswitch_domain_models = { path = "../hyperswitch_domain_models" }
kgraph_utils = { version = "0.1.0", path = "../kgraph_utils" }
masking = { version = "0.1.0", path = "../masking" }
router_env = { version = "0.1.0", path = "../router_env", features = ["log_extra_implicit_fields", "log_custom_entries_to_extra"] }
storage_impl = { path = "../storage_impl", optional = true } # redis_cache for routing cache - feature removed
external_services = { path = "../external_services", optional = true, features = [] } # Base, features enabled via hyperswitch_routing features
euclid = { path = "../euclid" }

# External crates
async-trait = "0.1.77"
dyn-clone = "1.0.17"
error-stack = { version = "0.4.1", features = ["spantrace"] }
futures = "0.3.30"
rand = "0.8.5"
rand_chacha = "0.3.1"
reqwest = { version = "0.11.27", features = ["json", "rustls-tls", "gzip", "multipart"] }
rustc-hash = "1.1.0"
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.115"
thiserror = "1.0.58"
time = { version = "0.3.36", features = ["serde", "macros"] } # Corrected version and features
tokio = { version = "1.36.0", features = ["macros", "rt-multi-thread"] }
tracing = "0.1.40"


[lints]
workspace = true
