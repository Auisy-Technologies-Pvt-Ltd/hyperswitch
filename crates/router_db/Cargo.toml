[package]
name = "router_db"
version = "0.1.0"
edition.workspace = true
rust-version.workspace = true
license.workspace = true

[features]
# v2 = ["customer_v2", "payment_methods_v2", "api_models/v2", "diesel_models/v2", "hyperswitch_domain_models/v2", "storage_impl/v2", "kgraph_utils/v2", "common_utils/v2", "hyperswitch_connectors/v2","hyperswitch_interfaces/v2", "common_types/v2","revenue_recovery","scheduler/v2", "refunds_v2", "euclid/v2", "payment_methods/v2", "tokenization_v2"]
# v1 = ["api_models/v1", "diesel_models/v1", "hyperswitch_domain_models/v1", "storage_impl/v1", "hyperswitch_interfaces/v1", "kgraph_utils/v1", "common_utils/v1", "hyperswitch_connectors/v1", "common_types/v1","scheduler/v1", "payment_methods/v1"]
# payouts = ["api_models/payouts", "common_enums/payouts", "hyperswitch_connectors/payouts", "hyperswitch_domain_models/payouts", "storage_impl/payouts", "payment_methods/payouts"]
accounts_cache = []
payouts = ["api_models/payouts", "hyperswitch_domain_models/payouts", "storage_impl/payouts"]
customer_v2 = ["api_models/customer_v2", "diesel_models/customer_v2", "hyperswitch_domain_models/customer_v2", "storage_impl/customer_v2"]
payment_methods_v2 = [ "api_models/payment_methods_v2", "diesel_models/payment_methods_v2", "hyperswitch_domain_models/payment_methods_v2", "storage_impl/payment_methods_v2", "common_utils/payment_methods_v2"]
tokenization_v2 = ["api_models/tokenization_v2", "diesel_models/tokenization_v2", "hyperswitch_domain_models/tokenization_v2", "storage_impl/tokenization_v2"]
refunds_v2 = ["api_models/refunds_v2", "diesel_models/refunds_v2", "storage_impl/refunds_v2", "hyperswitch_domain_models/refunds_v2"]
v2 = ["api_models/v2","common_utils/v2","storage_impl/v2", "diesel_models/v2","hyperswitch_domain_models/v2", "scheduler/v2"]
v1 = ["api_models/v1","common_utils/v1", "storage_impl/v1", "diesel_models/v1","hyperswitch_domain_models/v1", "scheduler/v1"]
olap = ["hyperswitch_domain_models/olap", "storage_impl/olap", "scheduler/olap", "api_models/olap"]
kv_store = ["scheduler/kv_store"]

[dependencies]
api_models = { version = "0.1.0", path = "../api_models", features = ["errors", "control_center_theme"] }
common_enums = { version = "0.1.0", path = "../common_enums" }
common_utils = { version = "0.1.0", path = "../common_utils", features = ["signals", "async_ext", "logs", "metrics", "keymanager", "encryption_service"] }
diesel_models = { version = "0.1.0", path = "../diesel_models", features = ["kv_store", "tokenization_v2"], default-features = false }
events = { version = "0.1.0", path = "../events" }
payment_methods = { version = "0.1.0", path = "../payment_methods", default-features = false }
hyperswitch_domain_models = { version = "0.1.0", path = "../hyperswitch_domain_models", default-features = false }
masking = { version = "0.1.0", path = "../masking" }
redis_interface = { version = "0.1.0", path = "../redis_interface" }
router_env = { version = "0.1.0", path = "../router_env", features = ["log_extra_implicit_fields", "log_custom_entries_to_extra"] }
storage_impl = { version = "0.1.0", path = "../storage_impl", default-features = false }
scheduler = { version = "0.1.0", path = "../scheduler", default-features = false }



async-bb8-diesel = "0.2.1"
async-trait = "0.1.79"
bb8 = "0.8"
diesel = { version = "2.2.3", features = ["postgres"] }
futures = "0.3.30"
dyn-clone = "1.0.17"
error-stack = "0.4.1"
rdkafka = "0.36.2"
router_derive = { version = "0.1.0", path = "../router_derive" }
rustc-hash = "1.1.0"
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.115"
thiserror = "1.0.58"
time = { version = "0.3.35", features = ["serde", "serde-well-known", "std", "parsing", "serde-human-readable"] }
uuid = { version = "1.8.0", features = ["v4"] }
validator = "0.17.0"

[dev-dependencies]
tokio = "1.37.0"


[lints]
workspace = true
